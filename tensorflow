Deep Running bible
02- simple Liner Regression
import tensorflow as tf
x_data = [1, 2, 3]
y_data = [1, 2, 3]

# (W=1, b=0 가 되어야 한다는 것은 미리 알고 있다) 
W = tf.Variable(tf.random_uniform([1], -1.0, 1.0))
b = tf.Variable(tf.random_uniform([1], -1.0, 1.0))

hypothesis = W * x_data + b

cost = tf.reduce_mean(tf.square(hypothesis - y_data))

a = tf.Variable(0.1)
optimizer = tf.train.GradientDescentOptimizer(a)
train = optimizer.minimize(cost)

sess = tf.Session()
sess.run(tf.initializers.global_variables())

for step in range(1000):
    sess.run(train)
    if step % 30 == 0:
        print(step, sess.run(cost), sess.run(W), sess.run(b))
